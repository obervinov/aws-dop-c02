AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation Template to test parallel jobs https://github.com/obervinov/aws-dop-c02/_labs/codepipeline-experiments/0.codedeploy-env.yaml

Parameters:
  LatestAmiId:
    Description: Latest Amazon Linux 2023 AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

  InstanceType:
    Description: CodeDeploy agent EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t3.micro
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type from Free Tier.

  ArtifactsBucketName:
    Type: String
    Description: Name of the S3 bucket to use for CodePipeline artifacts (_labs/codepipeline-experiments)
    Default: labs-codepipeline-experiments

Resources:
  # --- S3 Bucket for CodePipeline Artifacts ---
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactsBucketName
      VersioningConfiguration:
        Status: Enabled

  # --- CodeDeploy Agent ---
  CodeDeployAgent:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install -y ruby wget
        cd /home/ec2-user
        wget https://bucket-name.s3.regcd ion-identifier.amazonaws.com/latest/install
        chmod +x ./install
        ./install auto
        systemctl start codedeploy-agent

Outputs:
  ArtifactsBucketName:
    Description: Name of the S3 bucket for CodePipeline artifacts
    Value: !Ref ArtifactsBucket
    Export:
      Name: !Sub "${AWS::StackName}-bucket-name"
  ArtifactsBucketArn:
    Description: ARN of the S3 bucket for CodePipeline artifacts
    Value: !GetAtt ArtifactsBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-bucket-arn"
